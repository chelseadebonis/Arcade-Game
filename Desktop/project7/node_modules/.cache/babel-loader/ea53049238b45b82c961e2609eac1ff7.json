{"ast":null,"code":"import _classCallCheck from \"/Users/chelseadebonis/Desktop/project7/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chelseadebonis/Desktop/project7/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chelseadebonis/Desktop/project7/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chelseadebonis/Desktop/project7/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chelseadebonis/Desktop/project7/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chelseadebonis/Desktop/project7/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { load_google_maps } from './utils.js';\nimport { load_places } from './utils.js';\nimport Sidescreen from './Components/Sidescreen.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.listItemClick = function (venue) {\n      var marker = _this.markers.filter(function (m) {\n        return m.id === venue.id;\n      })[0];\n\n      _this.infoWindow.setContent(marker.name);\n\n      _this.map.setCenter(marker.position);\n\n      _this.infoWindow.open(_this.map, marker);\n\n      _this.map.setZoom(12);\n\n      if (marker.getAnimation() !== null) {\n        marker.setAnimation(null);\n      } else {\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\n      } //stop animation after 500\n\n\n      setTimeout(function () {\n        marker.setAnimation(null);\n      }, 500);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var googleMapsPromise = load_google_maps();\n      var placesPromise = load_places();\n      Promise.all([googleMapsPromise, placesPromise]).then(function (values) {\n        var google = values[0];\n        _this2.venues = values[1].response.venues;\n        _this2.google = values;\n        _this2.markers = [];\n        _this2.map = new google.maps.Map(document.getElementById('map'), {\n          center: {\n            lat: 40.440624,\n            lng: -79.995888\n          },\n          zoom: 10\n        });\n        _this2.infoWindow = new google.maps.InfoWindow();\n\n        _this2.venues.forEach(function (venue) {\n          var marker = new google.maps.Marker({\n            animation: window.google.maps.Animation.DROP,\n            position: {\n              lat: venue.location.lat,\n              lng: venue.location.lng\n            },\n            map: _this2.map,\n            venue: venue,\n            id: venue.id,\n            name: venue.name\n          }); //animate markers when clicked\n\n          marker.addListener('click', function () {\n            if (marker.getAnimation() !== null) {\n              marker.setAnimation(null);\n            } else {\n              marker.setAnimation(google.maps.Animation.BOUNCE);\n            } //stop animation after 500\n\n\n            setTimeout(function () {\n              marker.setAnimation(null);\n            }, 500);\n          });\n          google.maps.event.addListener(marker, 'click', function () {\n            _this2.infoWindow.setContent(marker.name);\n\n            _this2.map.setCenter(marker.position);\n\n            _this2.infoWindow.open(_this2.map, marker);\n\n            _this2.map.setZoom(15);\n          });\n\n          _this2.markers.push(marker);\n        });\n\n        _this2.setState({\n          filteredVenues: _this2.venues\n        });\n      });\n    }\n  }, {\n    key: \"filterVenues\",\n    value: function filterVenues(query) {\n      //loop through markers and check if query matches input\n      var venueFilter = this.venues.filter(function (venue) {\n        return venue.name.toLowerCase().includes(query.toLowerCase());\n      }); //toLowerCase so user search case doesn't affect query\n\n      this.markers.forEach(function (marker) {\n        marker.name.toLowerCase().includes(query.toLowerCase()) === true ? marker.setVisible(true) : marker.setVisible(false);\n      });\n      this.setState({\n        filteredVenues: venueFilter,\n        query: query\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Sidescreen, {\n        listItemClick: this.listItemClick,\n        filterVenues: this.filterVenues,\n        filteredVenues: this.state.filteredVenues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/chelseadebonis/Desktop/project7/src/App.js"],"names":["React","Component","load_google_maps","load_places","Sidescreen","App","state","query","listItemClick","venue","marker","markers","filter","m","id","infoWindow","setContent","name","map","setCenter","position","open","setZoom","getAnimation","setAnimation","window","google","maps","Animation","BOUNCE","setTimeout","googleMapsPromise","placesPromise","Promise","all","then","values","venues","response","Map","document","getElementById","center","lat","lng","zoom","InfoWindow","forEach","Marker","animation","DROP","location","addListener","event","push","setState","filteredVenues","venueFilter","toLowerCase","includes","setVisible","filterVenues"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { load_google_maps } from './utils.js';\nimport { load_places } from './utils.js';\nimport Sidescreen from './Components/Sidescreen.js'\n\nclass App extends Component {\n    state = {\n      query: ''\n    }\n\n\n  componentDidMount() {\n    let googleMapsPromise = load_google_maps();\n    let placesPromise = load_places();\n\n    Promise.all([\n      googleMapsPromise,\n      placesPromise\n    ])\n    .then(values => {\n      let google = values[0];\n      this.venues = values[1].response.venues;\n\n      this.google = values\n      this.markers = [];\n      this.map = new google.maps.Map(document.getElementById('map'), {\n         center: {lat: 40.440624, lng: -79.995888},\n         zoom: 10\n       });\n      this.infoWindow = new google.maps.InfoWindow();\n\n      this.venues.forEach(venue => {\n        let marker = new google.maps.Marker({\n           animation: window.google.maps.Animation.DROP,\n           position: {lat: venue.location.lat , lng: venue.location.lng},\n           map: this.map,\n           venue: venue,\n           id: venue.id,\n           name: venue.name\n         });\n         //animate markers when clicked\n         marker.addListener('click', () => {\n           if (marker.getAnimation() !== null) {\n             marker.setAnimation(null);\n           } else {\n             marker.setAnimation(google.maps.Animation.BOUNCE);\n           }\n           //stop animation after 500\n           setTimeout(() => { marker.setAnimation(null) }, 500);\n         });\n\n           google.maps.event.addListener(marker, 'click', () => {\n             this.infoWindow.setContent(marker.name);\n             this.map.setCenter(marker.position);\n             this.infoWindow.open(this.map, marker);\n             this.map.setZoom(15);\n           });\n\n         this.markers.push(marker);\n      });\n\n      this.setState({ filteredVenues: this.venues });\n    });\n  }\n\nlistItemClick = (venue) => {\n  let marker  = this.markers.filter(m => m.id === venue.id)[0];\n  this.infoWindow.setContent(marker.name);\n  this.map.setCenter(marker.position);\n  this.infoWindow.open(this.map, marker);\n  this.map.setZoom(12);\n  if (marker.getAnimation() !== null) { marker.setAnimation(null) }\n  else { marker.setAnimation(window.google.maps.Animation.BOUNCE); }\n    //stop animation after 500\n    setTimeout(() => { marker.setAnimation(null) }, 500);\n  }\n\n\n  filterVenues(query) {\n    //loop through markers and check if query matches input\n    let venueFilter = this.venues.filter(venue => venue.name.toLowerCase().includes(query.toLowerCase()));\n\n\n    //toLowerCase so user search case doesn't affect query\n    this.markers.forEach(marker => {\n      marker.name.toLowerCase().includes(query.toLowerCase()) === true ?\n      marker.setVisible(true) :\n      marker.setVisible(false);\n    });\n\n    this.setState({ filteredVenues: venueFilter, query });\n  }\n\n  render() {\n    return (\n      <div>\n      <div id=\"map\">\n      </div>\n\n      <Sidescreen\n          listItemClick = {this.listItemClick}\n          filterVenues = {this.filterVenues}\n          filteredVenues = {this.state.filteredVenues}\n      />\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}